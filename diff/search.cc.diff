diff --git a/srsue/src/phy/search.cc b/srsue/src/phy/search.cc
index e1ab7d942..850fbefe5 100644
--- a/srsue/src/phy/search.cc
+++ b/srsue/src/phy/search.cc
@@ -113,7 +113,7 @@ search::ret_code search::run(srsran_cell_t* cell_, std::array<uint8_t, SRSRAN_BC
   int      ret           = SRSRAN_ERROR;
 
   Info("SYNC:  Searching for cell...");
-  srsran::console(".");
+  fprintf(stderr, ".");
 
   if (force_N_id_2 >= 0 && force_N_id_2 < 3) {
     ret           = srsran_ue_cellsearch_scan_N_id_2(&cs, force_N_id_2, &found_cells[force_N_id_2]);
@@ -135,7 +135,7 @@ search::ret_code search::run(srsran_cell_t* cell_, std::array<uint8_t, SRSRAN_BC
   new_cell.frame_type = found_cells[max_peak_cell].frame_type;
   float cfo           = found_cells[max_peak_cell].cfo;
 
-  srsran::console("\n");
+  fprintf(stderr, "\n");
   Info("SYNC:  PSS/SSS detected: Mode=%s, PCI=%d, CFO=%.1f KHz, CP=%s",
        new_cell.frame_type ? "TDD" : "FDD",
        new_cell.id,
@@ -162,13 +162,13 @@ search::ret_code search::run(srsran_cell_t* cell_, std::array<uint8_t, SRSRAN_BC
     srsran_bit_pack_vector(bch_payload.data(), mib_packed.data(), SRSRAN_BCH_PAYLOAD_LEN);
     std::copy(std::begin(mib_packed), std::end(mib_packed), std::begin(bch_payload));
 
-    fprintf(stdout,
+    /*fprintf(stdout,
             "Found Cell:  Mode=%s, PCI=%d, PRB=%d, Ports=%d, CFO=%.1f KHz\n",
             new_cell.frame_type ? "TDD" : "FDD",
             new_cell.id,
             new_cell.nof_prb,
             new_cell.nof_ports,
-            cfo / 1000);
+            cfo / 1000);*/
 
     Info("SYNC:  MIB Decoded: Mode=%s, PCI=%d, PRB=%d, Ports=%d, CFO=%.1f KHz",
          new_cell.frame_type ? "TDD" : "FDD",
@@ -197,4 +197,4 @@ search::ret_code search::run(srsran_cell_t* cell_, std::array<uint8_t, SRSRAN_BC
   }
 }
 
-}; // namespace srsue
\ No newline at end of file
+}; // namespace srsue
