diff --git a/lib/src/phy/rf/rf_soapy_imp.c b/lib/src/phy/rf/rf_soapy_imp.c
index 4af516a8c..a499c1c7f 100644
--- a/lib/src/phy/rf/rf_soapy_imp.c
+++ b/lib/src/phy/rf/rf_soapy_imp.c
@@ -299,11 +299,11 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
 
   // Print connected devices
   for (size_t i = 0; i < length; i++) {
-    printf("Soapy has found device #%d: ", (int)i);
+    fprintf(stderr,"Soapy has found device #%d: ", (int)i);
     for (size_t j = 0; j < soapy_args[i].size; j++) {
-      printf("%s=%s, ", soapy_args[i].keys[j], soapy_args[i].vals[j]);
+      fprintf(stderr, "%s=%s, ", soapy_args[i].keys[j], soapy_args[i].vals[j]);
     }
-    printf("\n");
+    fprintf(stderr, "\n");
   }
 
   // Select Soapy device by id
@@ -326,19 +326,19 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
 
   // select last device if dev_id exceeds available devices
   dev_id = SRSRAN_MIN(dev_id, length - 1);
-  printf("Selecting Soapy device: %d\n", dev_id);
+  fprintf(stderr, "Selecting Soapy device: %d\n", dev_id);
 
   // With the Lime we are better off using LTE sample rates
   const char* devname = SoapySDRKwargs_get(&soapy_args[dev_id], "name");
   if (devname != NULL && strstr(devname, "Lime") != NULL && srsran_symbol_size_is_standard() == false) {
-    printf("\033[0;31mDetected LimeSDR. Consider using LTE rates for better RF performance.\nEither compile with "
+    fprintf(stderr, "\033[0;31mDetected LimeSDR. Consider using LTE rates for better RF performance.\nEither compile with "
            "\'-DUSE_LTE_RATES=True\' or start srsENB/srsUE with \'--expert.lte_sample_rates=true\'\033[0m\n");
   }
 
   // Now make the device
   SoapySDRDevice* sdr = SoapySDRDevice_make(&(soapy_args[dev_id]));
   if (sdr == NULL) {
-    printf("Failed to create Soapy object\n");
+    fprintf(stderr, "Failed to create Soapy object\n");
     return SRSRAN_ERROR;
   }
   SoapySDRKwargsList_clear(soapy_args, length);
@@ -366,7 +366,7 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
     for (int i = 0; i < handler->num_rx_channels; i++) {
       rx_channels[i] = i;
     }
-    printf("Setting up Rx stream with %zd channel(s)\n", handler->num_rx_channels);
+    fprintf(stderr, "Setting up Rx stream with %zd channel(s)\n", handler->num_rx_channels);
 #if SOAPY_SDR_API_VERSION < 0x00080000
     if (SoapySDRDevice_setupStream(handler->device,
                                    &handler->rxStream,
@@ -380,7 +380,7 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
         handler->device, SOAPY_SDR_RX, SOAPY_SDR_CF32, rx_channels, handler->num_rx_channels, &stream_args);
     if (handler->rxStream == NULL) {
 #endif
-      printf("Rx setupStream fail: %s\n", SoapySDRDevice_lastError());
+      fprintf(stderr, "Rx setupStream fail: %s\n", SoapySDRDevice_lastError());
       return SRSRAN_ERROR;
     }
     handler->rx_mtu = SoapySDRDevice_getStreamMTU(handler->device, handler->rxStream);
@@ -394,7 +394,7 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
     for (int i = 0; i < handler->num_tx_channels; i++) {
       tx_channels[i] = i;
     }
-    printf("Setting up Tx stream with %zd channel(s)\n", handler->num_tx_channels);
+    fprintf(stderr, "Setting up Tx stream with %zd channel(s)\n", handler->num_tx_channels);
 #if SOAPY_SDR_API_VERSION < 0x00080000
     if (SoapySDRDevice_setupStream(handler->device,
                                    &handler->txStream,
@@ -408,7 +408,7 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
         handler->device, SOAPY_SDR_TX, SOAPY_SDR_CF32, tx_channels, handler->num_tx_channels, &stream_args);
     if (handler->txStream == NULL) {
 #endif
-      printf("Tx setupStream fail: %s\n", SoapySDRDevice_lastError());
+      fprintf(stderr, "Tx setupStream fail: %s\n", SoapySDRDevice_lastError());
       return SRSRAN_ERROR;
     }
     handler->tx_mtu = SoapySDRDevice_getStreamMTU(handler->device, handler->txStream);
@@ -422,17 +422,17 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
   size_t list_length;
   char** list;
   list = SoapySDRDevice_listSensors(handler->device, &list_length);
-  printf("Available device sensors: \n");
+  fprintf(stderr, "Available device sensors: \n");
   for (int i = 0; i < list_length; i++) {
-    printf(" - %s\n", list[i]);
+    fprintf(stderr, " - %s\n", list[i]);
   }
 
   // list channel sensors
   for (uint32_t i = 0; i < handler->num_rx_channels; ++i) {
     list = SoapySDRDevice_listChannelSensors(handler->device, SOAPY_SDR_RX, i, &list_length);
-    printf("Available sensors for Rx channel %d: \n", i);
+    fprintf(stderr, "Available sensors for Rx channel %d: \n", i);
     for (int j = 0; j < list_length; j++) {
-      printf(" - %s\n", list[j]);
+      fprintf(stderr, " - %s\n", list[j]);
     }
   }
 
@@ -452,7 +452,7 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
     char*      config_ptr     = strstr(args, config_arg);
     if (config_ptr) {
       copy_subdev_string(config_str, config_ptr + strlen(config_arg));
-      printf("Loading config file %s\n", config_str);
+      fprintf(stderr, "Loading config file %s\n", config_str);
       SoapySDRDevice_writeSetting(handler->device, "LOAD_CONFIG", config_str);
       remove_substring(args, config_arg);
       remove_substring(args, config_str);
@@ -465,7 +465,7 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
     if (rx_ant_ptr) {
       copy_subdev_string(rx_ant_str, rx_ant_ptr + strlen(rx_ant_arg));
       for (int i = 0; i < handler->num_rx_channels; i++) {
-        printf("Setting Rx channel %d antenna to %s\n", i, rx_ant_str);
+        fprintf(stderr, "Setting Rx channel %d antenna to %s\n", i, rx_ant_str);
         if (SoapySDRDevice_setAntenna(handler->device, SOAPY_SDR_RX, i, rx_ant_str) != 0) {
           ERROR("Failed to set Rx antenna for channel %d.", i);
         }
@@ -481,7 +481,7 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
     if (tx_ant_ptr) {
       copy_subdev_string(tx_ant_str, tx_ant_ptr + strlen(tx_ant_arg));
       for (int i = 0; i < handler->num_rx_channels; i++) {
-        printf("Setting Tx channel %d antenna to %s\n", i, tx_ant_str);
+        fprintf(stderr, "Setting Tx channel %d antenna to %s\n", i, tx_ant_str);
         if (SoapySDRDevice_setAntenna(handler->device, SOAPY_SDR_TX, i, tx_ant_str) != 0) {
           ERROR("Failed to set Tx antenna for channel %d.", i);
         }
@@ -517,24 +517,24 @@ int rf_soapy_open_multi(char* args, void** h, uint32_t num_requested_channels)
   // list gains and AGC mode
   bool has_agc = SoapySDRDevice_hasGainMode(handler->device, SOAPY_SDR_RX, 0);
   list         = SoapySDRDevice_listGains(handler->device, SOAPY_SDR_RX, 0, &list_length);
-  printf("State of gain elements for Rx channel 0 (AGC %s):\n", has_agc ? "supported" : "not supported");
+  fprintf(stderr, "State of gain elements for Rx channel 0 (AGC %s):\n", has_agc ? "supported" : "not supported");
   for (int i = 0; i < list_length; i++) {
-    printf(" - %s: %.2f dB\n", list[i], SoapySDRDevice_getGainElement(handler->device, SOAPY_SDR_RX, 0, list[i]));
+    fprintf(stderr, " - %s: %.2f dB\n", list[i], SoapySDRDevice_getGainElement(handler->device, SOAPY_SDR_RX, 0, list[i]));
   }
 
   has_agc = SoapySDRDevice_hasGainMode(handler->device, SOAPY_SDR_TX, 0);
   list    = SoapySDRDevice_listGains(handler->device, SOAPY_SDR_TX, 0, &list_length);
-  printf("State of gain elements for Tx channel 0 (AGC %s):\n", has_agc ? "supported" : "not supported");
+  fprintf(stderr, "State of gain elements for Tx channel 0 (AGC %s):\n", has_agc ? "supported" : "not supported");
   for (int i = 0; i < list_length; i++) {
-    printf(" - %s: %.2f dB\n", list[i], SoapySDRDevice_getGainElement(handler->device, SOAPY_SDR_TX, 0, list[i]));
+    fprintf(stderr, " - %s: %.2f dB\n", list[i], SoapySDRDevice_getGainElement(handler->device, SOAPY_SDR_TX, 0, list[i]));
   }
 
   // print actual antenna configuration
   char* ant = SoapySDRDevice_getAntenna(handler->device, SOAPY_SDR_RX, 0);
-  printf("Rx antenna set to %s\n", ant);
+  fprintf(stderr, "Rx antenna set to %s\n", ant);
 
   ant = SoapySDRDevice_getAntenna(handler->device, SOAPY_SDR_TX, 0);
-  printf("Tx antenna set to %s\n", ant);
+  fprintf(stderr, "Tx antenna set to %s\n", ant);
 
 #if HAVE_ASYNC_THREAD
   if (start_async_thread) {
@@ -790,7 +790,7 @@ void rf_soapy_get_time(void* h, time_t* secs, double* frac_secs)
 
 // TODO: add multi-channel support
 int rf_soapy_recv_with_time_multi(void*    h,
-                                  void*    data[SRSRAN_MAX_PORTS],
+                                  void**   data,
                                   uint32_t nsamples,
                                   bool     blocking,
                                   time_t*  secs,
